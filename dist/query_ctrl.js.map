{"version":3,"sources":["../src/query_ctrl.js"],"names":["MODE_SUMMARY","MODE_SINGLE","MODE_SINGLE_HISTORY","GenericDatasourceQueryCtrl","$scope","$injector","scope","target","check","uuid","type","resultsModes","value","text","mode","resultsMode","SUMMARY","SINGLE","HISTORY","init","metric","scopeDefaults","_","defaults","targetDefaults","getMetricSuggestionsAsync","getSuggestions","bind","getOptions","query","suggestions","datasource","metricFindQuery","then","result","rawQueryResult","a","forEach","push","item","name","console","log","rawQuery","panelCtrl","refresh","find","el","code","newTarget","cloneDeep","isEqual","oldTarget","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport const MODE_SUMMARY = 0;\nexport const MODE_SINGLE = 1;\nexport const MODE_SINGLE_HISTORY = 2;\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector,)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.check = this.target.check || 'Select Check';\n    this.target.uuid = this.target.uuid || null\n    this.target.type = this.target.type || 'table';\n\n    this.resultsModes = [\n      {value: 'sum',       text: 'Summary',     mode: MODE_SUMMARY},\n      {value: 'single',      text: 'Single',        mode: MODE_SINGLE},\n      {value: 'single-history',      text: 'Single History',        mode: MODE_SINGLE_HISTORY},\n    ];\n    \n    this.$scope.resultsMode = {\n      SUMMARY: MODE_SUMMARY,\n      SINGLE: MODE_SINGLE,\n      HISTORY: MODE_SINGLE_HISTORY,\n    };\n    \n    this.init = function() {\n      var target = this.target;\n      var metric = this.metric;\n\n      var scopeDefaults = {\n        metric: {},\n        // oldTarget: _.cloneDeep(this.target),\n        // queryOptionsText: this.renderQueryOptionsText()\n      };\n      _.defaults(this, scopeDefaults);\n\n      // Load default values\n      var targetDefaults = {\n        'mode': MODE_SUMMARY,\n      };\n      _.defaults(target, targetDefaults);\n\n      if (this.target.mode == MODE_SUMMARY) {\n        this.target.check = ''\n      }\n\n      this.getMetricSuggestionsAsync();\n    };\n    this.init();\n    // this.results = this.datasource.metricFindQuery(query || '');\n    this.getSuggestions = _.bind(this.getOptions, this)\n  }\n\n  getOptions(query) {\n    return this.metric.suggestions\n  }\n\n  getMetricSuggestionsAsync(query) {\n    return this.datasource.metricFindQuery(query || '').then(a => {\n      let result = []\n      this.metric.rawQueryResult = a\n      a.forEach(item => result.push(item.name));\n      this.metric.suggestions = result\n      console.log(this.metric.rawQueryResult)\n      return result\n    });\n  }\n\n  // getTextValues(metricFindResult) {\n  //   return _.map(metricFindResult, value => {\n  //     return value.text;\n  //   });\n  // }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  onTargetBlur() {\n    this.target.uuid = this.metric.rawQueryResult.find(el => el.name == this.target.check).code\n    var newTarget = _.cloneDeep(this.target);\n    if (!_.isEqual(this.oldTarget, this.target)) {  \n      this.oldTarget = newTarget;\n      this.panelCtrl.refresh();\n    }\n  }\n\n  switchResultsMode(mode){\n    this.target.mode = mode;\n    if (mode == 0){\n      this.target.uuid = ''\n    }\n    this.init()\n    this.panelCtrl.refresh();\n    // console.log(this.resultsMode)\n  }\n}\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}